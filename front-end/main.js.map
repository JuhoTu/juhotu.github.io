{"version":3,"sources":["./src/app/service/questions.service.ts","./src/app/tentti/person.ts","./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/app/templateform/templateform.component.ts","./src/app/templateform/templateform.component.html","./src/environments/environment.ts","./src/app/tentti/tentti.component.ts","./src/app/tentti/tentti.component.html","./src/app/calculator/calculator.component.ts","./src/app/calculator/calculator.component.html","./src/app/reactiveform/reactiveform.component.ts","./src/app/reactiveform/reactiveform.component.html","./src/app/tentti/service.ts","./src/app/feedback/question.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/router-guard.guard.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app.module.ts","./src/app/finnkino/finnkino.component.ts","./src/app/finnkino/finnkino.component.html","./src/app/tentti/ticket.ts","./src/app/index/index.component.ts","./src/app/index/index.component.html","./src/app/feedback/feedback.component.ts","./src/app/feedback/feedback.component.html","./src/app/templateform/person.ts","./src/app/pipes/news-filter.pipe.ts","./src/app/service/auth-service.service.ts","./src/app/service/cinema.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Question} from \"../feedback/question\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n  questions: Question[];\n\n  constructor() {\n    this.questions = [new Question(\"How is your day going?\"),\n      new Question(\"How is your week going?\"),\n      new Question(\"How is your month going?\")];\n  }\n\n  getInfo() {\n    return this.questions;\n  }\n}\n","export class Person {\n  firstName: string;\n  lastName: string;\n  address: string;\n  postNum: string;\n  city: string;\n  email: string;\n\n  constructor(fname: string, lname: string, address: string, postNum: string, city: string, email: string) {\n    this.firstName = fname;\n    this.lastName = lname;\n    this.address = address;\n    this.postNum = postNum;\n    this.city = city;\n    this.email = email;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {AuthServiceService} from \"../service/auth-service.service\";\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor(public authService: AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  get userName() {return this.authService.getLoggedInUser();}\n  get loginStatus() {return this.authService.isLoggedIn;}\n  get logout() {return this.authService.logout();}\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu Icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n      <a mat-menu-item routerLink=\"/calculator\" routerLinkActive=\"active\">Calculator</a>\n      <a mat-menu-item routerLink=\"/feedback\" routerLinkActive=\"active\">Feedback</a>\n      <a mat-menu-item routerLink=\"/tentti\" routerLinkActive=\"active\">Tentti</a>\n      <a mat-menu-item routerLink=\"/template-form\" routerLinkActive=\"active\">Template-Form</a>\n      <a mat-menu-item routerLink=\"/reactive-form\" routerLinkActive=\"active\">Reactive-Form</a>\n      <a mat-menu-item routerLink=\"/finnkino\" routerLinkActive=\"active\">Finnkino</a>\n  </mat-menu>\n  <a class=\"tool-a\" routerLink=\"/\" routerLinkActive=\"active\">Front-end tasks - Juho Turkki</a>\n  <div class=\"login\">\n    <div *ngIf=\"loginStatus === true\">\n      <a class=\"tool-a\" routerLink=\"/admin\" routerLinkActive=\"active\">{{ userName}}</a>\n      <button mat-button (click)=\"logout\">Sign out</button>\n    </div>\n    <button mat-button *ngIf=\"loginStatus === false\" routerLink=\"/login\" routerLinkActive=\"active\">Sign in</button>\n  </div>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport {Person} from \"./person\";\n\n@Component({\n  selector: 'app-template-form',\n  templateUrl: './templateform.component.html',\n  styleUrls: ['./templateform.component.css']\n})\nexport class TemplateformComponent implements OnInit {\n  person: Person;\n  confirmPassword: string;\n  accept: boolean;\n\n  constructor() {\n    this.person = new Person('','','','','','');\n    this.confirmPassword = '';\n    this.accept = false;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onAcceptChange() {\n    if (this.accept === false)\n      this.accept = true;\n    else\n      this.accept = false;\n  }\n\n  onSave() {\n    console.log(this.person, this.accept);\n  }\n}\n","<div class=\"form\">\n  <form (ngSubmit)=\"onSave()\" #contactForm=\"ngForm\">\n    <h1>Registration form</h1>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"First Name\"\n             name=\"firstName\"\n             [(ngModel)]=\"person.firstName\"\n             #fname = \"ngModel\"\n             required minlength=\"2\" pattern=\"^[a-öA-Ö -]*$\">\n      <mat-error *ngIf=\"fname.hasError('required')\">Enter first name</mat-error>\n      <mat-error *ngIf=\"fname.hasError('minlength')\">Minimum of two characters</mat-error>\n      <mat-error *ngIf=\"fname.hasError('pattern')\">Enter a valid name</mat-error>\n    </mat-form-field><br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Last Name\"\n             name=\"lastName\"\n             [(ngModel)]=\"person.lastName\"\n             #lname = \"ngModel\"\n             required minlength=\"2\" pattern=\"^[a-öA-Ö -]*$\">\n      <mat-error *ngIf=\"lname.hasError('required')\">Enter last name</mat-error>\n      <mat-error *ngIf=\"lname.hasError('minlength')\">Minimum of two characters</mat-error>\n      <mat-error *ngIf=\"lname.hasError('pattern')\">Enter a valid name</mat-error>\n    </mat-form-field><br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Person ID\"\n             name=\"pin\"\n             [(ngModel)]=\"person.pin\"\n             #pin = \"ngModel\"\n             required minlength=\"11\" maxlength=\"11\" pattern=\"^(0[1-9]|[12]\\d|3[01])(0[1-9]|1[0-2])([5-9]\\d\\+|\\d\\d-|[01]\\dA)\\d{3}[\\dA-Z]$\">\n      <mat-error *ngIf=\"pin.hasError('required')\">Enter personal ID</mat-error>\n      <mat-error *ngIf=\"pin.hasError('minlength') || pin.hasError('maxlength')\">Invalid length</mat-error>\n      <mat-error *ngIf=\"pin.hasError('pattern')\">Enter a valid personal ID</mat-error>\n    </mat-form-field><br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Email\"\n             name=\"email\"\n             type=\"email\"\n             [(ngModel)]=\"person.email\"\n             #email=\"ngModel\"\n             required minlength=\"5\">\n      <mat-error *ngIf=\"email.hasError('required')\">Enter email</mat-error>\n      <mat-error *ngIf=\"email.hasError('minlength')\">Enter a valid email</mat-error>\n    </mat-form-field><br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Username\"\n             name=\"userName\"\n             [(ngModel)]=\"person.userName\"\n             #uname = \"ngModel\"\n             required minlength=\"6\" pattern=\"^[a-zA-Z]*$\">\n      <mat-error *ngIf=\"uname.hasError('required')\">Enter username</mat-error>\n      <mat-error *ngIf=\"uname.hasError('minlength')\">Minimum of six characters</mat-error>\n      <mat-error *ngIf=\"uname.hasError('pattern')\">Enter only letters</mat-error>\n    </mat-form-field><br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Password\"\n             name=\"password1\"\n             type=\"password\"\n             [(ngModel)]=\"person.password\"\n             #pwrd=\"ngModel\"\n             required minlength=\"10\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{10,}$\">\n      <mat-error *ngIf=\"pwrd.hasError('required')\">Enter password</mat-error>\n      <mat-error *ngIf=\"pwrd.hasError('minlength')\">Minimum of ten characters</mat-error>\n      <mat-error *ngIf=\"pwrd.hasError('pattern')\">Must include at least one capital letter and number</mat-error>\n    </mat-form-field><br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Confirm password\"\n             name=\"password2\"\n             type=\"password\"\n             [(ngModel)]=\"confirmPassword\"\n             #pwrd2=\"ngModel\"\n             required pattern=\"{{pwrd.value}}\">\n      <mat-error *ngIf=\"pwrd2.hasError('required')\">Enter password</mat-error>\n      <mat-error *ngIf=\"pwrd2.hasError('pattern')\">Passwords do not match</mat-error>\n    </mat-form-field><br>\n    <mat-checkbox (click)=\"onAcceptChange()\">Accept terms and conditions</mat-checkbox>\n  </form>\n\n  <div *ngIf=\"accept===true\">\n    <button mat-button color=\"primary\" [disabled]=\"!contactForm.form.valid\" (click)=\"onSave()\">\n      Submit\n    </button>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDmzZiXA0RmqECwzMEuffg-M_32efyiBtc\",\n    authDomain: \"front-end-turkki.firebaseapp.com\",\n    projectId: \"front-end-turkki\",\n    storageBucket: \"front-end-turkki.appspot.com\",\n    messagingSenderId: \"542282534215\",\n    appId: \"1:542282534215:web:5d642dbabdc61716a05062\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Person } from './person';\nimport { Ticket} from \"./ticket\";\nimport { Service } from \"./service\";\n\n@Component({\n  selector: 'app-tentti',\n  templateUrl: './tentti.component.html',\n  styleUrls: ['./tentti.component.css']\n})\nexport class TenttiComponent implements OnInit {\n\n  tickets: Ticket[];\n  person: Person;\n  orderSum: number;\n  checked: boolean;\n\n  constructor() {\n    this.tickets = [new Ticket('Peruslippu', 16), new Ticket('Opiskelija', 8.8),new Ticket('Eläkeläinen', 8)];\n    this.person = new Person('','','','','','');\n    this.orderSum = this.sum();\n  }\n\n  ngOnInit(): void {\n  }\n\n  addValue(value: any, t: Ticket) {\n    if (value === '+')\n      t.count++;\n    else if (value === '-')\n      if (t.count > 0)\n        t.count--;\n    this.orderSum = this.sum();\n  }\n\n  mtk() {\n    let check = <HTMLInputElement>document.getElementById(\"checked\");\n    let isChecked = check.checked;\n    if (isChecked === false)\n      this.checked = true;\n    else\n      this.checked = false;\n\n    this.orderSum = this.sum();\n  }\n\n  sum(): number {\n    let sum = 0;\n    this.tickets.forEach(function (value) {\n       sum += value.count * value.price;\n      }\n    );\n    if (this.checked === false)\n      sum = sum * 0.85;\n    return sum;\n  }\n\n  purchase() {\n    let service = new Service(this.person, this.tickets, this.orderSum);\n    service.end();\n  }\n}\n","<mat-grid-list cols=\"1\" rowHeight=\"10:1\">\n  <mat-grid-tile *ngFor=\"let t of tickets\">{{t.ticket}}\n    <button mat-fab color=\"primary\" (click)=\"addValue('-', t)\">-</button>\n    {{ t.count }}\n    <button mat-fab color=\"primary\" (click)=\"addValue('+', t)\">+</button>\n  </mat-grid-tile>\n</mat-grid-list>\n\n<br><mat-divider></mat-divider><br>\n\n<mat-grid-list cols=\"2\" id=\"sum\">\n  <mat-list-item>\n    <input id=\"checked\" (click)=\"mtk()\" type=\"checkbox\">\n    <span>MTK:n jäsen</span>\n  </mat-list-item>\n  <mat-list-item>\n    <mat-form-field>\n      <mat-label>Yhteensä</mat-label>\n      <input matInput readonly [value]=\"orderSum\">\n      <span matSuffix>.00 €</span>\n    </mat-form-field>\n  </mat-list-item>\n</mat-grid-list>\n\n<br><mat-divider></mat-divider><br>\n\n<div class=\"form\">\n  <p>\n    <mat-form-field>\n      <input matInput\n        placeholder=\"Etunimi\"\n        name=\"firstname\"\n        [(ngModel)]=\"person.firstName\"\n        #fname=\"ngModel\"\n        required minlength=\"2\" pattern=\"[a-öA-Ö ]*$\">\n      <mat-error *ngIf=\"fname.hasError('required')\">Anna Etunimi</mat-error>\n      <mat-error *ngIf=\"fname.hasError('minlength')\">Vähintään kaksi kirjainta</mat-error>\n      <mat-error *ngIf=\"fname.hasError('pattern')\">Pitää olla oikea nimi</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Sukunimi\"\n             name=\"lastname\"\n             [(ngModel)]=\"person.lastName\"\n             #lname=\"ngModel\"\n             required minlength=\"2\" pattern=\"[a-öA-Ö ]*$\">\n      <mat-error *ngIf=\"lname.hasError('required')\">Anna sukunimi</mat-error>\n      <mat-error *ngIf=\"lname.hasError('minlength')\">Vähintään kaksi kirjainta</mat-error>\n      <mat-error *ngIf=\"lname.hasError('pattern')\">Pitää olla oikea nimi</mat-error>\n    </mat-form-field>\n  </p>\n\n  <p>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Lähiosoite\"\n             name=\"address\"\n             [(ngModel)]=\"person.address\"\n             #address=\"ngModel\"\n             minlength=\"5\" pattern=\"[a-öA-Ö0-9 ]*$\">\n      <mat-error *ngIf=\"address.hasError('minlength')\">Vähintään viisi kirjainta</mat-error>\n      <mat-error *ngIf=\"address.hasError('pattern')\">Pitää olla oikea osoite</mat-error>\n    </mat-form-field>\n  </p>\n\n  <p>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Postinumero\"\n             name=\"postNum\"\n             [(ngModel)]=\"person.postNum\"\n             #postNum=\"ngModel\"\n             minlength=\"5\" maxlength=\"5\" pattern=\"[0-9]*$\">\n      <mat-error *ngIf=\"postNum.hasError('minlength')\">Vähintään viisi kirjainta</mat-error>\n      <mat-error *ngIf=\"postNum.hasError('maxlength')\">Korkeintaan viisi kirjainta</mat-error>\n      <mat-error *ngIf=\"postNum.hasError('pattern')\">Pitää olla oikea postinumero</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Postitoimipaikka\"\n             name=\"city\"\n             [(ngModel)]=\"person.city\"\n             #city=\"ngModel\"\n             minlength=\"5\" pattern=\"[a-öA-Ö]*$\">\n      <mat-error *ngIf=\"city.hasError('minlength')\">Vähintään viisi kirjainta</mat-error>\n      <mat-error *ngIf=\"city.hasError('pattern')\">Pitää olla oikea postitoimipaikka</mat-error>\n    </mat-form-field>\n  </p>\n\n  <span>Liput lähetetään sähköpostiosoitteeseen</span>\n\n  <p>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Sähköpostiosoite\"\n             name=\"email\"\n             type=\"email\"\n             [(ngModel)]=\"person.email\"\n             #email=\"ngModel\"\n             required minlength=\"4\">\n      <mat-error *ngIf=\"email.hasError('required')\">Anna sähköpostiosoite</mat-error>\n      <mat-error *ngIf=\"email.hasError('minlength')\">Syötä oikea sähköpostiosoite</mat-error>\n    </mat-form-field>\n  </p>\n</div>\n\n<br><mat-divider></mat-divider><br>\n\n<div *ngIf=\"fname.valid && lname.valid && email.valid\" id=\"buy\">\n  <button mat-button (click)=\"purchase()\" color=\"primary\">Osta</button>\n</div>\n<br><br><br><br>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.css']\n})\nexport class CalculatorComponent implements OnInit {\n\n  buttons: string[];\n  result: string;\n  operator: string;\n  value1: string;\n  value2: string;\n\n  constructor() {\n    this.buttons = ['7','8','9','/','4','5','6','*','1','2','3','-','C','0','+','='];\n    this.result = '';\n    this.value1 = null;\n    this.value2 = null;\n    this.operator = null;\n  }\n\n  ngOnInit(): void {\n  }\n\n  addValue(value: string): void {\n    if (value === '=') {\n      if (this.value1 != null) {\n        this.value2 = Number(this.result).toString();\n        try {\n          if (this.operator === '/' && this.value2 === '0')\n            this.result = '0';\n          else\n           this.result = eval(this.value1 + this.operator + this.value2);\n          this.value1 = this.result;\n          this.operator = null;\n        } catch (e) {\n          this.result = 'error';\n        }\n      }\n    }\n    else if (value === 'C') {\n      this.result = \"\";\n      this.value1 = null;\n      this.value2 = null;\n      this.operator = null;\n    }\n    else if (value === '/' || value === '*' || value === '+' || value === '-') {\n      this.operator = value;\n      if (this.value1 === null)\n        this.value1 = Number(this.result).toString();\n      else\n        this.value2 = Number(this.result).toString();\n      this.result = '';\n    }\n    else {\n      if (this.result === 'error')\n        this.result = '';\n      this.result += value;\n    }\n  }\n}\n","<div class=\"calculator\">\n  <mat-card>{{ operator }} {{ result }}</mat-card>\n\n  <mat-grid-list cols=\"4\" rowHeight=\"2:1\">\n    <mat-grid-tile *ngFor=\"let button of buttons\"><button mat-fab color=\"primary\" (click)=\"addValue(button)\">\n      {{ button }}\n    </button></mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Person } from '../templateform/person';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-reactiveform',\n  templateUrl: './reactiveform.component.html',\n  styleUrls: ['./reactiveform.component.css']\n})\nexport class ReactiveformComponent implements OnInit {\n  profileForm: FormGroup;\n  accept: boolean;\n  person: Person;\n\n  constructor() {\n    this.person = new Person('','','','','','');\n    this.accept = false;\n  }\n\n  ngOnInit(): void {\n    this.profileForm = new FormGroup({\n      firstName: new FormControl('',[Validators.required,Validators.minLength(2),Validators.pattern(\"^[a-öA-Ö -]*$\")]),\n      lastName: new FormControl('',[Validators.required,Validators.minLength(2),Validators.pattern(\"^[a-öA-Ö -]*$\")]),\n      pin: new FormControl('',[Validators.required,Validators.minLength(11),Validators.maxLength(11),Validators.pattern(\"^(0[1-9]|[12]\\\\d|3[01])(0[1-9]|1[0-2])([5-9]\\\\d\\\\+|\\\\d\\\\d-|[01]\\\\dA)\\\\d{3}[\\\\dA-Z]$\")]),\n      email: new FormControl('',[Validators.required,Validators.minLength(5)]),\n      userName: new FormControl('',[Validators.required,Validators.minLength(6),Validators.pattern(\"^[a-zA-Z]*$\")]),\n      password: new FormControl('',[Validators.required,Validators.minLength(10),Validators.pattern(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)[a-zA-Z\\\\d]{10,}$\")]),\n      confirmPassword: new FormControl('',[Validators.required,Validators.minLength(10),Validators.pattern(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)[a-zA-Z\\\\d]{10,}$\")])\n    })\n  }\n\n  get firstName() { return this.profileForm.get('firstName');}\n  get lastName() { return this.profileForm.get('lastName');}\n  get pin() { return this.profileForm.get('pin');}\n  get email() { return this.profileForm.get('email');}\n  get userName() { return this.profileForm.get('userName');}\n  get password() { return this.profileForm.get('password');}\n  get confirmPassword() { return this.profileForm.get('confirmPassword');}\n\n  matchPasswords() {\n    if (this.profileForm.value.password === this.profileForm.value.confirmPassword)\n      return true;\n    else\n      return false;\n  }\n\n  onAcceptChange() {\n    if (this.accept === false)\n      this.accept = true;\n    else\n      this.accept = false;\n  }\n\n  onSubmit() {\n    if (this.matchPasswords() === true) {\n      if (this.profileForm.valid) {\n        this.person.firstName = this.profileForm.value.firstName;\n        this.person.lastName = this.profileForm.value.lastName;\n        this.person.pin = this.profileForm.value.pin;\n        this.person.email = this.profileForm.value.email;\n        this.person.userName = this.profileForm.value.userName;\n        this.person.password = this.profileForm.value.password;\n        console.log(this.person);\n        this.profileForm.reset();\n      }\n    }\n    else\n      console.log(\"password not match\");\n  }\n}\n","<div class=\"form\">\n  <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n    <h1>Registration Form</h1>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"First Name\"\n             formControlName=\"firstName\">\n      <mat-error *ngIf=\"firstName.hasError('required')\">Enter first name</mat-error>\n      <mat-error *ngIf=\"firstName.hasError('minlength')\">Minimum of two characters</mat-error>\n      <mat-error *ngIf=\"firstName.hasError('pattern')\">Enter a valid name</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Last Name\"\n             formControlName=\"lastName\">\n      <mat-error *ngIf=\"lastName.hasError('required')\">Enter last name</mat-error>\n      <mat-error *ngIf=\"lastName.hasError('minlength')\">Minimum of two characters</mat-error>\n      <mat-error *ngIf=\"lastName.hasError('pattern')\">Enter a valid name</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Person ID\"\n             formControlName=\"pin\">\n      <mat-error *ngIf=\"pin.hasError('required')\">Enter personal ID</mat-error>\n      <mat-error *ngIf=\"pin.hasError('minlength') || pin.hasError('maxlength')\">Invalid length</mat-error>\n      <mat-error *ngIf=\"pin.hasError('pattern')\">Enter a valid personal ID</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Email\"\n             formControlName=\"email\"\n             type=\"email\">\n      <mat-error *ngIf=\"email.hasError('required')\">Enter email</mat-error>\n      <mat-error *ngIf=\"email.hasError('minlength')\">Enter a valid email</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Username\"\n             formControlName=\"userName\">\n      <mat-error *ngIf=\"userName.hasError('required')\">Enter username</mat-error>\n      <mat-error *ngIf=\"userName.hasError('minlength')\">Minimum of six characters</mat-error>\n      <mat-error *ngIf=\"userName.hasError('pattern')\">Enter only letters</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Password\"\n             formControlName=\"password\"\n             type=\"password\">\n      <mat-error *ngIf=\"password.hasError('required')\">Enter password</mat-error>\n      <mat-error *ngIf=\"password.hasError('minlength')\">Minimum of ten characters</mat-error>\n      <mat-error *ngIf=\"password.hasError('pattern')\">Must include at least one capital letter and number</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input matInput\n             placeholder=\"Confirm password\"\n             formControlName=\"confirmPassword\"\n             type=\"password\">\n      <mat-error *ngIf=\"confirmPassword.hasError('required')\">Enter password</mat-error>\n    </mat-form-field><br>\n    <mat-checkbox (click)=\"onAcceptChange()\">Accept terms and conditions</mat-checkbox>\n    <mat-error *ngIf=\"matchPasswords() === false\">Passwords do not match</mat-error>\n  </form>\n\n  <div *ngIf=\"accept===true && matchPasswords() === true\">\n    <button mat-button color=\"primary\" [disabled]=\"!profileForm.valid\" (click)=\"onSubmit()\">\n      Submit\n    </button>\n  </div>\n</div>\n","import { Person } from \"./person\";\nimport { Ticket } from \"./ticket\";\n\nexport class Service {\n\n  person: Person;\n  tickets: Ticket[];\n  orderSum: number;\n\n  constructor(person: Person, tickets: Ticket[], orderSum: number) {\n    this.person = person;\n    this.tickets = tickets;\n    this.orderSum = orderSum;\n  }\n\n  end() {\n    this.tickets.forEach(function (value){\n      console.log(value.ticket + ' - ' + value.count + ' á ' + value.price);\n    });\n    console.log('Order Sum = ' + this.orderSum + ' €',this.person.firstName, this.person.lastName, this.person.email);\n  }\n}\n","export class Question {\n  question: string;\n  answer: string;\n\n  constructor(question: string) {\n    this.question = question;\n    this.answer = \"Not answered\";\n  }\n\n  setAnswer(answer: number) {\n    if (answer === 0)\n      this.answer = 'Not answered';\n    else if (answer === 1)\n      this.answer = 'Very bad';\n    else if (answer === 2)\n      this.answer = 'Bad';\n    else if (answer === 3)\n      this.answer = 'Neutral';\n    else if (answer === 4)\n      this.answer = 'Good';\n    else if (answer === 5)\n      this.answer = 'Very Good';\n    else\n      this.answer = 'error';\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'helloworld';\n}\n","<app-toolbar></app-toolbar>\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthServiceService} from \"./service/auth-service.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterGuardGuard implements CanActivate {\n  constructor(public authService: AuthServiceService, public router: Router) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean> | boolean {\n    if (this.authService.isLoggedIn !== true) {\n      this.router.navigate(['login'])\n    }\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {QuestionsService} from \"../service/questions.service\";\nimport {Question} from \"../feedback/question\";\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  questions: Question[];\n\n  constructor(private service: QuestionsService) {\n    this.questions = service.getInfo();\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<mat-card>\n  <mat-card-title>Welcome Admin!</mat-card-title>\n  <mat-card-content>\n    <mat-grid-list cols=\"1\" rowHeight=\"20:1\">\n      <mat-grid-tile-header>You can change questions below:</mat-grid-tile-header>\n      <mat-grid-tile *ngFor=\"let q of questions\">\n        <p>{{ q.question }}</p>\n        <input matInput placeholder=\"Change question\" [(ngModel)]=\"q.question\">\n      </mat-grid-tile>\n    </mat-grid-list>\n  </mat-card-content>\n</mat-card>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CalculatorComponent } from './calculator/calculator.component';\n\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { MatIconModule} from \"@angular/material/icon\";\nimport {MatListModule} from \"@angular/material/list\";\nimport { BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { TenttiComponent } from './tentti/tentti.component';\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {QuestionsService} from \"./service/questions.service\";\nimport { TemplateformComponent } from './templateform/templateform.component';\nimport { ReactiveformComponent } from './reactiveform/reactiveform.component';\nimport { IndexComponent } from './index/index.component';\nimport { FinnkinoComponent } from './finnkino/finnkino.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {CinemaService} from \"./service/cinema.service\";\nimport { NewsFilterPipe } from './pipes/news-filter.pipe';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component';\nimport {AngularFireModule} from \"@angular/fire\";\nimport {AngularFireAuthModule} from \"@angular/fire/auth\";\nimport {AngularFirestoreModule} from \"@angular/fire/firestore\";\nimport {environment} from \"../environments/environment\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalculatorComponent,\n    FeedbackComponent,\n    ToolbarComponent,\n    TenttiComponent,\n    TemplateformComponent,\n    ReactiveformComponent,\n    IndexComponent,\n    FinnkinoComponent,\n    NewsFilterPipe,\n    AdminComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatCardModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatListModule,\n    BrowserAnimationsModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatExpansionModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule\n  ],\n  providers: [\n    QuestionsService,\n    CinemaService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {CinemaService} from \"../service/cinema.service\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-finnkino',\n  templateUrl: './finnkino.component.html',\n  styleUrls: ['./finnkino.component.css']\n})\nexport class FinnkinoComponent implements OnInit {\n  private cinemaData$: Observable<[]>;\n  searchTerm: string;\n\n  constructor(private cinemaService: CinemaService) {\n    this.cinemaData$ = this.cinemaService.getData();\n    console.log(this.cinemaData$);\n  }\n\n  get cinemaData() {return this.cinemaData$;}\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Finnkinon uutiset</h1>\n\n<input matInput id=\"search\" placeholder=\"Etsi uutista\" [(ngModel)]=\"searchTerm\">\n\n<mat-expansion-panel hideToggle  *ngFor=\"let d of cinemaData | async | newsFilter: searchTerm\">\n  <mat-expansion-panel-header>\n    <mat-panel-title>\n      {{ d.Title }}\n    </mat-panel-title>\n    <mat-panel-description>\n      {{ d.PublishDate | date: 'dd.mm.yyyy' }}\n    </mat-panel-description>\n  </mat-expansion-panel-header>\n  <img src=\"{{ d.ImageURL }}\">\n</mat-expansion-panel>\n","export class Ticket {\n\n  ticket: string;\n  count: number;\n  price: number;\n\n  constructor(ticket: string, price: number) {\n    this.ticket = ticket;\n    this.count = 0;\n    this.price = price;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-title>Hello World!</mat-card-title>\n  <mat-card-content>This is a collection of front-end tasks. You can navigate trough the tasks using the menu on left on toolbar</mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport {Question} from './question';\nimport {QuestionsService} from \"../service/questions.service\";\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n\n  questions: Question[];\n\n  constructor(private service: QuestionsService) {\n    this.questions = service.getInfo();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onInputChange(event: any, object: Question) {\n    object.setAnswer(event.value);\n  }\n}\n","<mat-grid-list cols=\"1\" rowHeight=\"7:1\">\n  <mat-grid-tile *ngFor=\"let q of questions\"><mat-grid-tile-header>{{ q.question }}</mat-grid-tile-header>\n    <mat-slider (input)=\"onInputChange($event, q)\" color=\"primary\" min=\"1\" max=\"5\" value=\"3\"></mat-slider>\n    <p>{{ q.answer }}</p>\n  </mat-grid-tile>\n</mat-grid-list>\n","export class Person {\n  firstName: string;\n  lastName: string;\n  pin: string;\n  email: string;\n  userName: string;\n  password: string;\n\n  constructor(fname: string, lname: string, pin: string, email: string, uname: string, password: string) {\n    this.firstName = fname;\n    this.lastName = lname;\n    this.pin = pin;\n    this.email = email;\n    this.userName = uname;\n    this.password = password;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'newsFilter'\n})\nexport class NewsFilterPipe implements PipeTransform {\n\n  transform(items: any[], searchTerm: string): any[] {\n    if (!items)\n      return [];\n    if(!searchTerm)\n      return items;\n    searchTerm = searchTerm.toLocaleLowerCase();\n\n    return items.filter(it => {\n      return it.Title.toLocaleLowerCase().includes(searchTerm) || it.PublishDate.includes(searchTerm);\n    })\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {AngularFirestore, AngularFirestoreDocument} from \"@angular/fire/firestore\";\nimport {User} from \"../login/user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n  userData: any;\n\n  constructor(public router: Router, public afs: AngularFirestore, public afAuth: AngularFireAuth) {\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  login(email: string, password: string) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.router.navigate(['admin']);\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n  logout(){\n    return this.afAuth.signOut()\n      .then(() => {\n        localStorage.removeItem('user');\n        this.router.navigate(['']);\n  })\n  }\n  getLoggedInUser():any{\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user.email;\n  }\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.email !== null) ? true : false;\n  }\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    };\n    return userRef.set(userData, {\n      merge: true\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {map} from \"rxjs/operators\";\nimport { parseString } from 'xml2js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CinemaService {\n  url = \"https://www.finnkino.fi/xml/News\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getData():Observable<any> {\n    return this.httpClient.get(this.url, { responseType: 'text' })\n      .pipe(map(response => {\n        parseString(response, {trim: true, explicitArray: false}, (err, result) => {\n          console.log(JSON.parse(JSON.stringify(result)));\n          return JSON.stringify((result));\n        });\n      }));\n  }\n  // This works\n  /*getData():Observable<any> {\n    return this.httpClient.get(this.url, { responseType: 'text' })\n      .pipe(map(response => {\n          let newsData = [];\n          newsData = [{'Title':'Ensi-Palm Springs','PublishDate':'2020-11- 24T00:00:00','HTMLLead':'','ImageURL':'http://media.finnkino.fi/ 1012/news/6124/PalmSprings_5 50.jpg'},\n            {'Title':'Ensi-ilta: Karjamäen joulu','PublishDate':'2020-11- 24T00:00:00','HTMLLead':'','ImageURL':'http://media.finnkino.fi/ 1012/news/6123/JulPaKutoppe n_550.jpg'}];\n          return newsData;\n      }))\n  }*/\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//Components\nimport { CalculatorComponent } from \"./calculator/calculator.component\";\nimport { FeedbackComponent } from \"./feedback/feedback.component\";\nimport { TenttiComponent } from \"./tentti/tentti.component\";\nimport { TemplateformComponent } from \"./templateform/templateform.component\";\nimport {ReactiveformComponent} from \"./reactiveform/reactiveform.component\";\nimport {IndexComponent} from \"./index/index.component\";\nimport {FinnkinoComponent} from \"./finnkino/finnkino.component\";\nimport {AdminComponent} from \"./admin/admin.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {RouterGuardGuard} from \"./router-guard.guard\";\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent},\n  { path: 'calculator', component: CalculatorComponent},\n  { path: 'feedback', component: FeedbackComponent},\n  { path: 'tentti', component: TenttiComponent},\n  { path: 'template-form', component: TemplateformComponent},\n  { path: 'reactive-form', component: ReactiveformComponent},\n  { path: 'finnkino', component: FinnkinoComponent},\n  { path: 'admin', component: AdminComponent, canActivate: [RouterGuardGuard]},\n  { path: 'login', component: LoginComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AuthServiceService} from \"../service/auth-service.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  userName: string;\n  password: string;\n\n  constructor(public router: Router, public authService: AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit = () => {this.authService.login(this.userName, this.password);}\n  onCancel = () => {this.router.navigate(['']);}\n}\n","<mat-card>\n  <mat-card-title>Email</mat-card-title>\n  <mat-card-content><input matInput type=\"email\" [(ngModel)]=\"userName\"></mat-card-content>\n  <mat-card-title>Password</mat-card-title>\n  <mat-card-content><input matInput type=\"password\" [(ngModel)]=\"password\"></mat-card-content>\n  <mat-card-content>\n    <button mat-button color=\"primary\" (click)=\"onSubmit()\">Login</button>\n    <button mat-button color=\"warn\" (click)=\"onCancel()\">Cancel</button>\n  </mat-card-content>\n</mat-card>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}